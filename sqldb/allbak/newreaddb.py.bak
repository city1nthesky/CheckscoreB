# -*- coding: utf-8 -*-#
# filename: readdb.py

import sqlite3
#import sys
import importlib,sys
importlib.reload(sys)

SG1WHS_2022 = ["2201","2202","2203","2204",\
        "2205","2206","2207","2208","2209",\
        "2215","2216","2217","2218","2219",\
        "2220","2221","2222","2223",\
        "2241","2242","2245"]

SG1WHD_2022 = ["2229","2230","2231","2232","2233"]

SG1WHZ_2022 = ["2210","2211","2212","2213","2214",\
        "2224","2225","2226","2227","2228","2243"]

SG1SZD_2022 = ["2234","2235","2236","2237","2244"]

SG1SZS_2022 = ["2238","2239","2240"]

SG2LK_2022 = ["2101","2102","2103","2104",\
        "2105","2106","2107","2108","2109",\
        "2110","2113","2114","2115","2116",\
        "2117","2118","2119","2120","2121",\
        "2122","2123","2124","2127","2128",\
        "2129","2130","2131","2132","2133",\
        "2134","2135","2136","2137","2138",\
        "2143","2144","2145"]

SG2WK_2022 = ["2111","2112","2125","2126",\
        "2139","2140","2141","2142","2146"]

SG3LK_2022 = ["2001","2002","2003","2004",\
        "2005","2006","2007","2008","2009",\
        "2010","2011","2012","2013","2014",\
        "2015","2016","2017","2018","2019",\
        "2020","2021","2022","2023","2024",\
        "2025","2026","2027","2028","2029",\
        "2030","2031","2032","2033","2034",\
        "2047","2048","2049","2050"]

SG3WK_2022 = ["2035","2036","2037","2038",\
        "2039","2040","2041","2042","2043",\
        "2245","2246"]

#获取班级分析 如果sql语句执行失败返回error 如果数据为空返回isnull
def read_db_class_allexam_analysis(dbname, classname, dbstr, partindex = 0):
    #reload(sys)
    #sys.setdefaultencoding('utf8')
    #print(dbname, classname, dbstr, partindex)

    conn = sqlite3.connect(dbname)
    c = conn.cursor()

    text = {"th":[], "td":[]}
    th = []
    td = []
    mysum = []
    yuwen = []
    shuxue = []
    yingyu = []
    select1 = []
    select2 = []
    select3 = []
    gradepart = []
    count = int(partindex)

    if classname in (SG1WHS_2022 + SG1WHZ_2022 + SG1WHD_2022 + SG1SZD_2022 + SG1SZS_2022 + SG2LK_2022 + SG2WK_2022 + SG3LK_2022 + SG3WK_2022):
        th.append("学科/考试")
        mysum.append("总分")
        yuwen.append("语文")
        shuxue.append("数学")
        yingyu.append("英语")
    elif classname == "高三":
        th.append("类别/考试")
        gradepart = ['L1','L2','L3','LF','WY','WF']
    elif classname == "高二":
        th.append("类别/考试")
        gradepart = ['L1','L2','L3','W1','W2','W3']
    elif classname == "高一":
        th.append("类别/考试")
        gradepart = ['B1','B2','B3']
    else:
        return "error"


    if not gradepart:

        sql = "select * from " + dbstr + str(classname) + " ORDER BY rowid DESC"
        #print("sql",sql)

        try:
            # 执行SQL语句
            cursor = c.execute(sql)
        except sqlite3.Error as e:
            # 打印异常信息
            conn.close()
            print("error")
            return "error"


        if classname in (SG2LK_2022 + SG3LK_2022 + SG1WHS_2022):
            select1.append("物理")
            select2.append("化学")
            select3.append("生物")
        elif classname in (SG2WK_2022 + SG3WK_2022):
            select1.append("政治")
            select2.append("历史")
            select3.append("地理")
        elif classname in SG1WHD_2022:
            select1.append("物理")
            select2.append("化学")
            select3.append("地理")
        elif classname in SG1WHZ_2022:
            select1.append("物理")
            select1.append("政治")
            select2.append("化学")
        elif classname in SG1SZD_2022:
            select2.append("历史")
            select1.append("政治")
            select3.append("地理")
        elif classname in SG1SZS_2022:
            select2.append("历史")
            select1.append("政治")
            select3.append("生物")
        else:
            return "error"

        results = cursor.fetchall()
        # 检查查询结果是否为空
        if not results:
            conn.close()
            print("isnull")
            return "isnull"
        else:
            # 处理查询结果
            for row in results:
                #print(results)
                th.append(row[0])
                mysum.append(row[1])
                yuwen.append(row[2])
                shuxue.append(row[3])
                yingyu.append(row[4])
                select1.append(row[5])
                select2.append(row[6])
                select3.append(row[7])

        text["th"] = th
        text["td"] = [mysum,yuwen,shuxue,yingyu,select1,select2,select3]
    else:
        ffirst = True
        for x in gradepart:
            sql = "select * from " + dbstr + str(x) + " ORDER BY rowid DESC"
            #print("sql",sql)

            try:
                # 执行SQL语句
                cursor = c.execute(sql)
            except sqlite3.Error as e:
                # 打印异常信息
                conn.close()
                print("error")
                return "error"

            results = cursor.fetchall()
            # 检查查询结果是否为空
            if not results:
                conn.close()
                print("isnull")
                return "isnull"
            else:
                # 处理查询结果
                tmplist = [x]
                for row in results:
                    #print(results)
                    #print(row)
                    if ffirst:
                        th.append(row[1])
                    tmplist.append(row[2+count])
                ffirst = False
                tmplist[0] = row[0]
                td.append(tmplist)
        
        text["th"] = th
        text["td"] = td

    #print("text",text)
    return text


#获取学生最近一次考试的分析 如果sql语句执行失败返回error 如果数据为空返回isnull
def read_db_studata_latestanalysis(dbname, classname, stuname, stuid, dbstr):
    #reload(sys)
    #sys.setdefaultencoding('utf8')


    conn = sqlite3.connect(dbname)
    c = conn.cursor()

    sql = "select * from " + dbstr + str(stuid)
    #print("sql",sql)

    try:
        # 执行SQL语句
        cursor = c.execute(sql)
    except sqlite3.Error as e:
        # 打印异常信息
        conn.close()
        print("error")
        return "error"

    text = []
    tmpallsubjects = []

    results = cursor.fetchall()
    # 检查查询结果是否为空
    if not results:
        conn.close()
        print("isnull")
        return "isnull"
    else:
        # 处理查询结果
        for row in results:
            #print(results)
            text.append({'thisExam': row[0]})
            passflag = True
            #print("row[3]", row[3])
            #print("typerow[3]", type(row[3]))
            if row[3] == '1':
                passflag = True
            else:
                passflag = False
            tmpallsubjects.append({'name': '总分','riseNumB': row[1], 'riseNumD': row[2], 'passflag': passflag})
            tmpallsubjects.append({'name': '语文','riseNumB': row[4], 'riseNumD': row[5], 'passflag': passflag})
            tmpallsubjects.append({'name': '数学','riseNumB': row[7], 'riseNumD': row[8], 'passflag': passflag})
            tmpallsubjects.append({'name': '外语','riseNumB': row[10], 'riseNumD': row[11], 'passflag': passflag})
            if classname in (SG2LK_2022 + SG3LK_2022):
                tmpallsubjects.append({'name': '物理','riseNumB': row[13], 'riseNumD': row[14], 'passflag': passflag})
                tmpallsubjects.append({'name': '化学','riseNumB': row[16], 'riseNumD': row[17], 'passflag': passflag})
                tmpallsubjects.append({'name': '生物','riseNumB': row[19], 'riseNumD': row[20], 'passflag': passflag})
                tmpallsubjects.append({'name': '理综','riseNumB': row[22], 'riseNumD': row[23], 'passflag': passflag})
            elif classname in (SG2WK_2022 + SG3WK_2022):
                tmpallsubjects.append({'name': '政治','riseNumB': row[13], 'riseNumD': row[14], 'passflag': passflag})
                tmpallsubjects.append({'name': '历史','riseNumB': row[16], 'riseNumD': row[17], 'passflag': passflag})
                tmpallsubjects.append({'name': '地理','riseNumB': row[19], 'riseNumD': row[20], 'passflag': passflag})
                tmpallsubjects.append({'name': '文综','riseNumB': row[22], 'riseNumD': row[23], 'passflag': passflag})
            elif classname in SG1WHS_2022:
                tmpallsubjects.append({'name': '物理','riseNumB': row[13], 'riseNumD': row[14], 'passflag': passflag})
                tmpallsubjects.append({'name': '化学','riseNumB': row[16], 'riseNumD': row[17], 'passflag': passflag})
                tmpallsubjects.append({'name': '生物','riseNumB': row[19], 'riseNumD': row[20], 'passflag': passflag})
            elif classname in SG1WHD_2022:
                tmpallsubjects.append({'name': '物理','riseNumB': row[13], 'riseNumD': row[14], 'passflag': passflag})
                tmpallsubjects.append({'name': '化学','riseNumB': row[16], 'riseNumD': row[17], 'passflag': passflag})
                tmpallsubjects.append({'name': '地理','riseNumB': row[19], 'riseNumD': row[20], 'passflag': passflag})
            elif classname in SG1WHZ_2022:
                tmpallsubjects.append({'name': '物理','riseNumB': row[13], 'riseNumD': row[14], 'passflag': passflag})
                tmpallsubjects.append({'name': '化学','riseNumB': row[16], 'riseNumD': row[17], 'passflag': passflag})
                tmpallsubjects.append({'name': '政治','riseNumB': row[19], 'riseNumD': row[20], 'passflag': passflag})
            elif classname in SG1SZD_2022:
                tmpallsubjects.append({'name': '历史','riseNumB': row[13], 'riseNumD': row[14], 'passflag': passflag})
                tmpallsubjects.append({'name': '政治','riseNumB': row[16], 'riseNumD': row[17], 'passflag': passflag})
                tmpallsubjects.append({'name': '地理','riseNumB': row[19], 'riseNumD': row[20], 'passflag': passflag})
            elif classname in SG1SZS_2022:
                tmpallsubjects.append({'name': '历史','riseNumB': row[13], 'riseNumD': row[14], 'passflag': passflag})
                tmpallsubjects.append({'name': '政治','riseNumB': row[16], 'riseNumD': row[17], 'passflag': passflag})
                tmpallsubjects.append({'name': '生物','riseNumB': row[19], 'riseNumD': row[20], 'passflag': passflag})
            text.append(tmpallsubjects)

    #print("text",text)
    return text


#获取学生整体的分析 如果sql语句执行失败返回error 如果数据为空返回isnull
def read_db_studata_allanalysis(dbname, classname, stuname, stuid, dbstr):
    #reload(sys)
    #sys.setdefaultencoding('utf8')


    conn = sqlite3.connect(dbname)
    c = conn.cursor()

    sql = "select * from " + dbstr + str(stuid) + " where name = '" + stuname + "'"
    #print("sql",sql)

    try:
        # 执行SQL语句
        cursor = c.execute(sql)
    except sqlite3.Error as e:
        # 打印异常信息
        conn.close()
        print("error")
        return "error"

    text = []
    tmpallsubjects = []

    results = cursor.fetchall()
    # 检查查询结果是否为空
    if not results:
        conn.close()
        print("isnull")
        return "isnull"
    else:
        # 处理查询结果
        for row in results:
            #print(results)
            text.append({'totalNum': row[1]})
            tmpallsubjects.append({'name': '总分','passNum' : row[2], 'passRate': round(row[2] / row[1] *100, 1)})
            tmpallsubjects.append({'name': '语文','passNum' : row[3], 'passRate': round(row[3] / row[1] *100, 1)})
            tmpallsubjects.append({'name': '数学','passNum' : row[4], 'passRate': round(row[4] / row[1] *100, 1)})
            tmpallsubjects.append({'name': '外语','passNum' : row[5], 'passRate': round(row[5] / row[1] *100, 1)})
            if classname in (SG2LK_2022 + SG3LK_2022):
                tmpallsubjects.append({'name': '物理','passNum' : row[6], 'passRate': round(row[6] / row[1] *100, 1)})
                tmpallsubjects.append({'name': '化学','passNum' : row[7], 'passRate': round(row[7] / row[1] *100, 1)})
                tmpallsubjects.append({'name': '生物','passNum' : row[8], 'passRate': round(row[8] / row[1] *100, 1)})
                tmpallsubjects.append({'name': '理综','passNum' : row[9], 'passRate': round(row[9] / row[1] *100, 1)})
            elif classname in (SG2WK_2022 + SG3WK_2022):
                tmpallsubjects.append({'name': '政治','passNum' : row[6], 'passRate': round(row[6] / row[1] *100, 1)})
                tmpallsubjects.append({'name': '历史','passNum' : row[7], 'passRate': round(row[7] / row[1] *100, 1)})
                tmpallsubjects.append({'name': '地理','passNum' : row[8], 'passRate': round(row[8] / row[1] *100, 1)})
                tmpallsubjects.append({'name': '文综','passNum' : row[9], 'passRate': round(row[9] / row[1] *100, 1)})
            elif classname in SG1WHS_2022:
                tmpallsubjects.append({'name': '物理','passNum' : row[6], 'passRate': round(row[6] / row[1] *100, 1)})
                tmpallsubjects.append({'name': '化学','passNum' : row[7], 'passRate': round(row[7] / row[1] *100, 1)})
                tmpallsubjects.append({'name': '生物','passNum' : row[8], 'passRate': round(row[8] / row[1] *100, 1)})
            elif classname in SG1WHD_2022:
                tmpallsubjects.append({'name': '物理','passNum' : row[6], 'passRate': round(row[6] / row[1] *100, 1)})
                tmpallsubjects.append({'name': '化学','passNum' : row[7], 'passRate': round(row[7] / row[1] *100, 1)})
                tmpallsubjects.append({'name': '地理','passNum' : row[8], 'passRate': round(row[8] / row[1] *100, 1)})
            elif classname in SG1WHZ_2022:
                tmpallsubjects.append({'name': '物理','passNum' : row[6], 'passRate': round(row[6] / row[1] *100, 1)})
                tmpallsubjects.append({'name': '化学','passNum' : row[7], 'passRate': round(row[7] / row[1] *100, 1)})
                tmpallsubjects.append({'name': '政治','passNum' : row[6], 'passRate': round(row[6] / row[1] *100, 1)})
            elif classname in SG1SZD_2022:
                tmpallsubjects.append({'name': '政治','passNum' : row[6], 'passRate': round(row[6] / row[1] *100, 1)})
                tmpallsubjects.append({'name': '历史','passNum' : row[7], 'passRate': round(row[7] / row[1] *100, 1)})
                tmpallsubjects.append({'name': '地理','passNum' : row[8], 'passRate': round(row[8] / row[1] *100, 1)})
            elif classname in SG1SZS_2022:
                tmpallsubjects.append({'name': '政治','passNum' : row[6], 'passRate': round(row[6] / row[1] *100, 1)})
                tmpallsubjects.append({'name': '历史','passNum' : row[7], 'passRate': round(row[7] / row[1] *100, 1)})
                tmpallsubjects.append({'name': '生物','passNum' : row[8], 'passRate': round(row[8] / row[1] *100, 1)})
            text.append(tmpallsubjects)

    #print("text",text)
    return text



#获取学生某科成绩 如果sql语句执行失败返回error 如果数据为空返回isnull
def read_db_drawpic_score(dbname, classname, stuname, graphics, selectcount, stuid):
    #reload(sys)
    #sys.setdefaultencoding('utf8')
    #print(dbname,classname,stuname,graphics,selectcount,stuid,dbstr)
    conn = sqlite3.connect(dbname)
    c = conn.cursor()
    title = u""
    title += (stuname + graphics + "折线图")
    #获取该学生参加的所有考试名称
    sql2 = "select exam from CurrentScore where student_id  = " + stuid
    print(sql2)
    try:
        # 执行SQL语句
        cursor = c.execute(sql2)
    except sqlite3.Error as e:
        # 打印异常信息
        conn.close()
        #print("error1")
        return "error","error","error","error"
    tmp = ""
    results = cursor.fetchall()
    # 检查查询结果是否为空
    if not results:
        conn.close()
        #print("isnull1")
        return "isnull","isnull","isnull","isnull"
    else:
        # 处理查询结果
        for row in results:
            tmp += row[0]
            tmp += " "
    #获取该学生参加的所有考试某科成绩
    x_data = tmp.split()
    if selectcount == 1:
        sql = "select Sum from CurrentScore  where student_id  = " + stuid
    elif selectcount == 2:
        sql = "select Yuwen from CurrentScore  where student_id  = " + stuid
    elif selectcount == 3:
        sql = "select Shuxue from CurrentScore  where student_id  = " + stuid
    elif selectcount == 4:
        sql = "select Waiyu from CurrentScore  where student_id  = " + stuid
    elif selectcount == 5:
        sql = "select Select1 from CurrentScore  where student_id  = " + stuid
    elif selectcount == 6:
        sql = "select Select2 from CurrentScore  where student_id  = " + stuid
    elif selectcount == 7:
        sql = "select Select3 from CurrentScore  where student_id  = " + stuid
    elif selectcount == 8:
        sql = "select Zonghe from CurrentScore  where student_id  = " + stuid

    print(sql)
    try:
        # 执行SQL语句
        cursor = c.execute(sql)
    except sqlite3.Error as e:
        # 打印异常信息
        conn.close()
        #print("error2")
        return "error","error","error","error"
    tmp = ""
    results = cursor.fetchall()
    # 检查查询结果是否为空
    if not results:
        conn.close()
        #print("isnull2")
        return "isnull","isnull","isnull","isnull"
    else:
        # 处理查询结果
        for row in results:
            tmp += row[0]
            tmp += " "

    #把获取的学生的所有考试的某科成绩段次添加到字典中
    str_y_data = tmp.split()
    y_data =[{"stu": [float(x) for x in str_y_data]}]
    #datalist  =[graphics + "段次"]
    datalist  =[graphics]

    tmp = ""
    if classname in (SG1WHS_2022 + SG1WHZ_2022 + SG1WHD_2022 + SG1SZD_2022 + SG1SZS_2022):
        grade = '高一'
    elif classname in (SG2WK_2022 + SG2LK_2022):
        grade = '高二'
    else:
        grade = '高三'
    #获取该学生参加的所有考试某科成绩段次的一本线数据
    for x in x_data:
        if selectcount == 1:
            sql = "select Sum from SchoolLINEClassHightScore where line_chscore = '一本线' and exam = '" + str(x) + "' and grade = '" + grade + "'"
        elif selectcount == 2:
            sql = "select Yuwen from SchoolLINEClassHightScore where line_chscore = '一本线' and exam = '" + str(x) + "' and grade = '" + grade + "'"
        elif selectcount == 3:
            sql = "select Shuxue from SchoolLINEClassHightScore where line_chscore = '一本线' and exam = '" + str(x) + "' and grade = '" + grade + "'"
        elif selectcount == 4:
            sql = "select Waiyu from SchoolLINEClassHightScore where line_chscore = '一本线' and exam = '" + str(x) + "' and grade = '" + grade + "'"
        elif selectcount == 5:
            sql = "select Select1 from SchoolLINEClassHightScore where line_chscore = '一本线' and exam = '" + str(x) + "' and grade = '" + grade + "'"
        elif selectcount == 6:
            sql = "select Select2 from SchoolLINEClassHightScore where line_chscore = '一本线' and exam = '" + str(x) + "' and grade = '" + grade + "'"
        elif selectcount == 7:
            sql = "select Select3 from SchoolLINEClassHightScore where line_chscore = '一本线' and exam = '" + str(x) + "' and grade = '" + grade + "'"
        elif selectcount == 8:
            sql = "select Zonghe from SchoolLINEClassHightScore where line_chscore = '一本线' and exam = '" + str(x) + "' and grade = '" + grade + "'"
        print(sql)
        try:
            # 执行SQL语句
            cursor = c.execute(sql)
        except sqlite3.Error as e:
            # 打印异常信息
            conn.close()
            #print("error3")
            return "error","error","error","error"
        results = cursor.fetchall()
        # 检查查询结果是否为空
        if not results:
            #conn.close()
            #print("isnull3")
            #return "isnull","isnull","isnull","isnull"
            break
        else:
            # 处理查询结果
            for row in results:
                if selectcount == 8 and row[0] == None:
                    break;
                tmp += row[0]
                tmp += " "
    if selectcount == 8 and classname in (SG1WHS_2022 + SG1WHZ_2022 + SG1WHD_2022 + SG1SZD_2022 + SG1SZS_2022):
        tmp = ""
    #把获取的学生的所有考试的某科成绩段次一本线添加到字典中
    y_data.append({"yibenxian": [float(x) for x in tmp.split()]})
    if y_data[1]["yibenxian"]:
        datalist.append('一本线')

    titlelist = [title]
    c.close()
    conn.close()
    return titlelist,x_data,y_data,datalist


#获取学生某科成绩段次 如果sql语句执行失败返回error 如果数据为空返回isnull
def read_db_drawpic_duanci(dbname, classname, stuname, graphics, selectcount, stuid):
    #reload(sys)
    #sys.setdefaultencoding('utf8')
    #print(dbname,classname,stuname,graphics,selectcount,stuid,dbstr)
    conn = sqlite3.connect(dbname)
    c = conn.cursor()
    title = u""
    title += (stuname + graphics + "折线图")
    #获取该学生参加的所有考试名称
    sql2 = "select exam from CurrentScore where student_id  = " + stuid
    print(sql2)
    try:
        # 执行SQL语句
        cursor = c.execute(sql2)
    except sqlite3.Error as e:
        # 打印异常信息
        conn.close()
        #print("error1")
        return "error","error","error","error"
    tmp = ""
    results = cursor.fetchall()
    # 检查查询结果是否为空
    if not results:
        conn.close()
        #print("isnull1")
        return "isnull","isnull","isnull","isnull"
    else:
        # 处理查询结果
        for row in results:
            tmp += row[0]
            tmp += " "
    #获取该学生参加的所有考试某科成绩段次
    x_data = tmp.split()
    if selectcount == 1:
        sql = "select SumD from CurrentScore  where student_id  = " + stuid
    elif selectcount == 2:
        sql = "select YuwenD from CurrentScore  where student_id  = " + stuid
    elif selectcount == 3:
        sql = "select ShuxueD from CurrentScore  where student_id  = " + stuid
    elif selectcount == 4:
        sql = "select WaiyuD from CurrentScore  where student_id  = " + stuid
    elif selectcount == 5:
        sql = "select Select1D from CurrentScore  where student_id  = " + stuid
    elif selectcount == 6:
        sql = "select Select2D from CurrentScore  where student_id  = " + stuid
    elif selectcount == 7:
        sql = "select Select3D from CurrentScore  where student_id  = " + stuid
    elif selectcount == 8:
        sql = "select ZongheD from CurrentScore  where student_id  = " + stuid

    print(sql)
    try:
        # 执行SQL语句
        cursor = c.execute(sql)
    except sqlite3.Error as e:
        # 打印异常信息
        conn.close()
        #print("error2")
        return "error","error","error","error"
    tmp = ""
    results = cursor.fetchall()
    # 检查查询结果是否为空
    if not results:
        conn.close()
        #print("isnull2")
        return "isnull","isnull","isnull","isnull"
    else:
        # 处理查询结果
        for row in results:
            tmp += row[0]
            tmp += " "

    #把获取的学生的所有考试的某科成绩段次添加到字典中
    str_y_data = tmp.split()
    y_data =[{"stu": [int(x) for x in str_y_data]}]
    #datalist  =[graphics + "段次"]
    datalist  =[graphics]

    tmp = ""
    if classname in (SG1WHS_2022 + SG1WHZ_2022 + SG1WHD_2022 + SG1SZD_2022 + SG1SZS_2022):
        grade = '高一'
    elif classname in (SG2WK_2022 + SG2LK_2022):
        grade = '高二'
    else:
        grade = '高三'
    #获取该学生参加的所有考试某科成绩段次的一本线数据
    for x in x_data:
        if selectcount == 1:
            sql = "select SumD from SchoolLINEClassHightScore where line_chscore = '一本线' and exam = '" + str(x) + "' and grade = '" + grade + "'"
        elif selectcount == 2:
            sql = "select YuwenD from SchoolLINEClassHightScore where line_chscore = '一本线' and exam = '" + str(x) + "' and grade = '" + grade + "'"
        elif selectcount == 3:
            sql = "select ShuxueD from SchoolLINEClassHightScore where line_chscore = '一本线' and exam = '" + str(x) + "' and grade = '" + grade + "'"
        elif selectcount == 4:
            sql = "select WaiyuD from SchoolLINEClassHightScore where line_chscore = '一本线' and exam = '" + str(x) + "' and grade = '" + grade + "'"
        elif selectcount == 5:
            sql = "select Select1D from SchoolLINEClassHightScore where line_chscore = '一本线' and exam = '" + str(x) + "' and grade = '" + grade + "'"
        elif selectcount == 6:
            sql = "select Select2D from SchoolLINEClassHightScore where line_chscore = '一本线' and exam = '" + str(x) + "' and grade = '" + grade + "'"
        elif selectcount == 7:
            sql = "select Select3D from SchoolLINEClassHightScore where line_chscore = '一本线' and exam = '" + str(x) + "' and grade = '" + grade + "'"
        elif selectcount == 8:
            sql = "select ZongheD from SchoolLINEClassHightScore where line_chscore = '一本线' and exam = '" + str(x) + "' and grade = '" + grade + "'"
        print(sql)
        try:
            # 执行SQL语句
            cursor = c.execute(sql)
        except sqlite3.Error as e:
            # 打印异常信息
            conn.close()
            #print("error3")
            return "error","error","error","error"
        results = cursor.fetchall()
        # 检查查询结果是否为空
        if not results:
            #conn.close()
            #print("isnull3")
            #return "isnull","isnull","isnull","isnull"
            break
        else:
            # 处理查询结果
            for row in results:
                if selectcount == 8 and row[0] == None:
                    break;
                tmp += row[0]
                tmp += " "
                print(tmp)
    if selectcount == 8 and classname in (SG1WHS_2022 + SG1WHZ_2022 + SG1WHD_2022 + SG1SZD_2022 + SG1SZS_2022):
        tmp = ""
    #把获取的学生的所有考试的某科成绩段次一本线添加到字典中
    y_data.append({"yibenxian": [int(x) for x in tmp.split()]})
    if y_data[1]["yibenxian"]:
        #datalist.append('一本线段次')
        datalist.append('一本线')

    titlelist = [title]
    c.close()
    conn.close()
    return titlelist,x_data,y_data,datalist


#获得用户的相关信息 如果用户未绑定则flag标志位false
def read_userinfo_db(dbname, userid):
    #reload(sys)
    #sys.setdefaultencoding('utf8')

    conn = sqlite3.connect(dbname)
    c = conn.cursor()

    sql = "select * from UserAccoutInfo where wxid = '" + userid + "'"
    print(sql)

    text = {"flag": False}
    try:
        # 执行SQL语句
        cursor = c.execute(sql)
    except sqlite3.Error as e:
        # 打印异常信息
        conn.close()
        return text
    results = cursor.fetchall()
    # 检查查询结果是否为空
    if not results:
        conn.close()
        return text
    else:
        # 处理查询结果
        for row in results:
            text["flag"] = True
            text["wxid"] = row[1]
            text["role"] = row[2]
            text["schoolname"] = row[3]
            text["phone"] = row[4]
            text["stuname"] = row[5]
            text["bind_state"] = row[6]
            text["unbindcount"] = row[7]


    c.close()
    conn.close()

    return text



#获取用户的行为记录   如果获取失败则actionrecod标志为false
def read_useractionrecod_db(dbname, userid):
    #reload(sys)
    #sys.setdefaultencoding('utf8')

    conn = sqlite3.connect(dbname)
    c = conn.cursor()

    sql = "SELECT * FROM AccoutRecord ORDER BY COUNT DESC  LIMIT 1"
    text = {"actionrecod": False}
    print(sql)


    try:
        # 执行SQL语句
        cursor = c.execute(sql)
    except sqlite3.Error as e:
        # 打印异常信息
        conn.close()
        return text

    results = cursor.fetchall()
    # 检查查询结果是否为空
    if not results:
        conn.close()
        return text
    else:
        # 处理查询结果
        for row in results:
            text["actionrecod"] =  True
            text["schoolarrayindex"] = row[4]
            text["classarrayindex"] = row[6]


    conn.close()
    return text



#获取某次考试成绩列表数据 如果sql语句执行失败返回error 如果数据为空返回isnull
def read_db_json(dbname, classname, stuname, stuid, exam):
    #reload(sys)
    #sys.setdefaultencoding('utf8')



    #print(dbname)
    conn = sqlite3.connect(dbname)
    c = conn.cursor()

    sql = "select * from CurrentScore where student_id  = " + stuid + " and exam = '" + str(exam) + "'" 
    print(sql)

    try:
        # 执行SQL语句
        cursor = c.execute(sql)
    except sqlite3.Error as e:
        # 打印异常信息
        #print("error")
        conn.close()
        return "error"

    text = {"th": ["成绩", "班次", "段次", "班级最高分", "一本线"], "td": []}

    if (classname in SG2LK_2022) or (classname in SG3LK_2022):
        results = cursor.fetchall()
        # 检查查询结果是否为空
        if not results:
            conn.close()
            print("isnull2")
            return "isnull"
        else:
            # 处理查询结果
            for row in results:
                text["td"].append(["总分:"+ row[7], row[8], row[9]])
                text["td"].append(["语文:"+ row[10], row[11], row[12]])
                text["td"].append(["数学:"+ row[13], row[14], row[15]])
                text["td"].append(["外语:"+ row[16], row[17], row[18]])
                text["td"].append(["物理:"+ row[19], row[20], row[21]])
                text["td"].append(["化学:"+ row[22], row[23], row[24]])
                text["td"].append(["生物:"+ row[25], row[26], row[27]])
                text["td"].append(["理综:"+ row[28], row[29], row[30]])
    elif (classname in SG2WK_2022) or (classname in SG3WK_2022):
        results = cursor.fetchall()
        # 检查查询结果是否为空
        if not results:
            conn.close()
            #print("isnull")
            return "isnull"
        else:
            # 处理查询结果
            for row in results:
                text["td"].append(["总分:"+ row[7], row[8], row[9]])
                text["td"].append(["语文:"+ row[10], row[11], row[12]])
                text["td"].append(["数学:"+ row[13], row[14], row[15]])
                text["td"].append(["外语:"+ row[16], row[17], row[18]])
                text["td"].append(["政治:"+ row[19], row[20], row[21]])
                text["td"].append(["历史:"+ row[22], row[23], row[24]])
                text["td"].append(["地理:"+ row[25], row[26], row[27]])
                text["td"].append(["文综:"+ row[28], row[29], row[30]])
    elif classname in SG1WHS_2022:
        results = cursor.fetchall()
        # 检查查询结果是否为空
        if not results:
            conn.close()
            #print("isnull")
            return "isnull"
        else:
            # 处理查询结果
            for row in results:
                text["td"].append(["总分:"+ row[7], row[8], row[9]])
                text["td"].append(["语文:"+ row[10], row[11], row[12]])
                text["td"].append(["数学:"+ row[13], row[14], row[15]])
                text["td"].append(["外语:"+ row[16], row[17], row[18]])
                text["td"].append(["物理:"+ row[19], row[20], row[21]])
                text["td"].append(["化学:"+ row[22], row[23], row[24]])
                text["td"].append(["生物:"+ row[25], row[26], row[27]])
                text["td"].append(["综合:"+ row[28], row[29], row[30]])
    elif classname in SG1WHD_2022:
        results = cursor.fetchall()
        # 检查查询结果是否为空
        if not results:
            conn.close()
            #print("isnull")
            return "isnull"
        else:
            # 处理查询结果
            for row in results:
                text["td"].append(["总分:"+ row[7], row[8], row[9]])
                text["td"].append(["语文:"+ row[10], row[11], row[12]])
                text["td"].append(["数学:"+ row[13], row[14], row[15]])
                text["td"].append(["外语:"+ row[16], row[17], row[18]])
                text["td"].append(["物理:"+ row[19], row[20], row[21]])
                text["td"].append(["化学:"+ row[22], row[23], row[24]])
                text["td"].append(["地理:"+ row[25], row[26], row[27]])
                text["td"].append(["综合:"+ row[28], row[29], row[30]])
    elif classname in SG1WHZ_2022:
        results = cursor.fetchall()
        # 检查查询结果是否为空
        if not results:
            conn.close()
            #print("isnull")
            return "isnull"
        else:
            # 处理查询结果
            for row in results:
                text["td"].append(["总分:"+ row[7], row[8], row[9]])
                text["td"].append(["语文:"+ row[10], row[11], row[12]])
                text["td"].append(["数学:"+ row[13], row[14], row[15]])
                text["td"].append(["外语:"+ row[16], row[17], row[18]])
                text["td"].append(["物理:"+ row[19], row[20], row[21]])
                text["td"].append(["化学:"+ row[22], row[23], row[24]])
                text["td"].append(["政治:"+ row[25], row[26], row[27]])
                text["td"].append(["综合:"+ row[28], row[29], row[30]])
    elif classname in SG1SZD_2022:
        results = cursor.fetchall()
        # 检查查询结果是否为空
        if not results:
            conn.close()
            #print("isnull")
            return "isnull"
        else:
            # 处理查询结果
            for row in results:
                text["td"].append(["总分:"+ row[7], row[8], row[9]])
                text["td"].append(["语文:"+ row[10], row[11], row[12]])
                text["td"].append(["数学:"+ row[13], row[14], row[15]])
                text["td"].append(["外语:"+ row[16], row[17], row[18]])
                text["td"].append(["历史:"+ row[19], row[20], row[21]])
                text["td"].append(["政治:"+ row[22], row[23], row[24]])
                text["td"].append(["地理:"+ row[25], row[26], row[27]])
                text["td"].append(["综合:"+ row[28], row[29], row[30]])
    elif classname in SG1SZS_2022:
        results = cursor.fetchall()
        # 检查查询结果是否为空
        if not results:
            conn.close()
            #print("isnull")
            return "isnull"
        else:
            # 处理查询结果
            for row in results:
                text["td"].append(["总分:"+ row[7], row[8], row[9]])
                text["td"].append(["语文:"+ row[10], row[11], row[12]])
                text["td"].append(["数学:"+ row[13], row[14], row[15]])
                text["td"].append(["外语:"+ row[16], row[17], row[18]])
                text["td"].append(["历史:"+ row[19], row[20], row[21]])
                text["td"].append(["政治:"+ row[22], row[23], row[24]])
                text["td"].append(["生物:"+ row[25], row[26], row[27]])
                text["td"].append(["综合:"+ row[28], row[29], row[30]])
    else:
        results = cursor.fetchall()
        # 检查查询结果是否为空
        if not results:
            conn.close()
            return "isnull"
        else:
            # 处理查询结果
            for row in results:
                text["td"].append(["总分:"+ row[2], row[3], row[4]])
                text["td"].append(["语文:"+ row[5], row[6], row[7]])
                text["td"].append(["数学:"+ row[8], row[9], row[10]])
                text["td"].append(["外语:"+ row[11], row[12], row[13]])
                text["td"].append(["物理:"+ row[14], row[15], row[16]])
                text["td"].append(["化学:"+ row[17], row[18], row[19]])
                text["td"].append(["生物:"+ row[20], row[21], row[22]])
                text["td"].append(["政治:"+ row[23], row[24], row[25]])
                text["td"].append(["历史:"+ row[26], row[27], row[28]])
                text["td"].append(["地理:"+ row[29], row[30], row[31]])


    sql = "select * from SchoolLINEClassHightScore  where line_chscore  = '班级最高分' and exam = '" + str(exam) + "' and class = " + str(classname)
    print(sql)
    try:
        # 执行SQL语句
        cursor = c.execute(sql)
    except sqlite3.Error as e:
        # 打印异常信息
        #print("error")
        conn.close()
        return "error"
    results = cursor.fetchall()
    # 检查查询结果是否为空
    if not results:
        conn.close()
        #print("isnull")
        return text
    else:
        # 处理查询结果
        for row in results:
            if classname in (SG1WHS_2022 + SG1WHZ_2022 + SG1WHD_2022 + SG1SZD_2022 + SG1SZS_2022):
                nozongheflag = 1
            else:
                nozongheflag = 0
            for i in range(len(text["td"]) - nozongheflag):
                text["td"][i].append(row[i*2+8])

    if classname in (SG1WHS_2022 + SG1WHZ_2022 + SG1WHD_2022 + SG1SZD_2022 + SG1SZS_2022):
        grade = '高一'
    elif classname in (SG2WK_2022 + SG2LK_2022):
        grade = '高二'
    else:
        grade = '高三'
    sql = "select * from SchoolLINEClassHightScore  where line_chscore = '一本线' and exam = '" + str(exam) + "' and grade = '" + grade + "'"
    print(sql)
    try:
        # 执行SQL语句
        cursor = c.execute(sql)
    except sqlite3.Error as e:
        # 打印异常信息
        conn.close()
        #print("error")
        return "error"
    results = cursor.fetchall()
    # 检查查询结果是否为空
    if not results:
        conn.close()
        #print("isnull")
        return text
    else:
        # 处理查询结果
        for row in results:
            if classname in (SG1WHS_2022 + SG1WHZ_2022 + SG1WHD_2022 + SG1SZD_2022 + SG1SZS_2022):
                nozongheflag = 1
            else:
                nozongheflag = 0
            for i in range(len(text["td"]) - nozongheflag):
                text["td"][i].append(row[i*2+8])


    c.close()
    conn.close()


    print("text")
    return text



#获取学生的学号 如果sql语句执行失败返回error 如果数据为空返回isnull
def read_db_changeid(dbname, classname, stuname):
    #reload(sys)
    #sys.setdefaultencoding('utf8')


    conn = sqlite3.connect(dbname)
    c = conn.cursor()

    sql = "select student_id  from CurrentStudent where student_name = '" + stuname + "' and class = " + classname

    try:
        # 执行SQL语句
        cursor = c.execute(sql)
    except sqlite3.Error as e:
        # 打印异常信息
        conn.close()
        return "error"

    stuid = ""

    results = cursor.fetchall()
    # 检查查询结果是否为空
    if not results:
        conn.close()
        return "isnull"
    else:
        # 处理查询结果
        for row in results:
            stuid = row[0]
    
    return stuid





#read_userinfo_db("oz1Xn4opoA19fTqSCPciZXcLwWmcs")
